#!/usr/bin/env bash

# Based on code from : https://dev.to/bdelespierre/how-to-setup-git-commit-hooks-for-php-42d1
# Based on code from : https://gist.github.com/Pilipo/e52ff5ac38fba9e1f5ed966816de41e9

# get bash colors and styles here:
# http://misc.flogisoft.com/bash/tip_colors_and_formatting
C_RESET='\e[0m'
C_RED='\e[31m'
C_GREEN='\e[32m'
C_YELLOW='\e[33m'

function __run() #(step, name, cmd)
{
    local color output exitcode

    printf "${C_YELLOW}[%s]${C_RESET} %-20s" "$1" "$2"
    output=$(eval "$3" 2>&1)
    exitcode=$?

    if [[ 0 == $exitcode || 130 == $exitcode ]]; then
        echo -e " - ${C_GREEN}OK${C_RESET}"
    else
        if [ $1 == "1/2" ]; then
            echo -e " - ${C_YELLOW}Recommit after checking${C_RESET}\n\n$output"
        else
            echo -e " - ${C_RED}Recommit after fixing${C_RESET}\n\n$output"
        fi
        exit 1
    fi
}

modified="git diff --name-only --cached" # Unused for now
ignore="code/vendor" # Superseded by .gitignore
options="--colors --filter=gitstaged -p --report-width=auto --standard=PSR12"
phpcbf="code/vendor/bin/phpcbf ${options} code"
phpcs="code/vendor/bin/phpcs ${options} code"

__run "1/2" "Code Beautifier: Beautifying code" "${phpcbf}"
__run "2/2" "Code Sniffer: Detecting coding standard violations" "${phpcs}"
